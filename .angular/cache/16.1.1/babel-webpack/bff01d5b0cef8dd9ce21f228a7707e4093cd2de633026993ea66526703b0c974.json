{"ast":null,"code":"import { UserStorageService } from '../../auth-services/storage-service/user-storage.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nclass NoAuthGuard {\n  constructor(router) {\n    this.router = router;\n  }\n  canActivate(next, state) {\n    if (UserStorageService.hasToken() && UserStorageService.isCustomerLoggedIn()) {\n      this.router.navigateByUrl('/customer/dashboard');\n      return false;\n    } else if (UserStorageService.hasToken() && UserStorageService.isAdminLoggedIn()) {\n      this.router.navigateByUrl('/admin/dashboard');\n      return false;\n    }\n    return true;\n  }\n}\nNoAuthGuard.ɵfac = function NoAuthGuard_Factory(t) {\n  return new (t || NoAuthGuard)(i0.ɵɵinject(i1.Router));\n};\nNoAuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: NoAuthGuard,\n  factory: NoAuthGuard.ɵfac,\n  providedIn: 'root'\n});\nexport { NoAuthGuard };","map":{"version":3,"names":["UserStorageService","NoAuthGuard","constructor","router","canActivate","next","state","hasToken","isCustomerLoggedIn","navigateByUrl","isAdminLoggedIn","i0","ɵɵinject","i1","Router","factory","ɵfac","providedIn"],"sources":["/Users/aishaoyinkansola/Desktop/Projects/E-commerce final project/E-commerce_BAZON_UI/src/app/auth/auth-guards/noAuth/no-auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { UserStorageService } from '../../auth-services/storage-service/user-storage.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NoAuthGuard implements CanActivate {\n  constructor(private router: Router) {}\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): boolean {\n\n    if(UserStorageService.hasToken() && UserStorageService.isCustomerLoggedIn()){\n      this.router.navigateByUrl('/customer/dashboard');\n      return false;\n    }\n    else if (UserStorageService.hasToken() && UserStorageService.isAdminLoggedIn()){\n      this.router.navigateByUrl('/admin/dashboard');\n      return false;\n    }\n    return true;\n  }\n  \n  \n}"],"mappings":"AAEA,SAASA,kBAAkB,QAAQ,0DAA0D;;;AAE7F,MAGaC,WAAW;EACtBC,YAAoBC,MAAc;IAAd,KAAAA,MAAM,GAANA,MAAM;EAAW;EAErCC,WAAWA,CACTC,IAA4B,EAC5BC,KAA0B;IAG1B,IAAGN,kBAAkB,CAACO,QAAQ,EAAE,IAAIP,kBAAkB,CAACQ,kBAAkB,EAAE,EAAC;MAC1E,IAAI,CAACL,MAAM,CAACM,aAAa,CAAC,qBAAqB,CAAC;MAChD,OAAO,KAAK;KACb,MACI,IAAIT,kBAAkB,CAACO,QAAQ,EAAE,IAAIP,kBAAkB,CAACU,eAAe,EAAE,EAAC;MAC7E,IAAI,CAACP,MAAM,CAACM,aAAa,CAAC,kBAAkB,CAAC;MAC7C,OAAO,KAAK;;IAEd,OAAO,IAAI;EACb;;AAjBWR,WAAW,C;mBAAXA,WAAW,EAAAU,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,MAAA;AAAA;AAAXb,WAAW,C;SAAXA,WAAW;EAAAc,OAAA,EAAXd,WAAW,CAAAe,IAAA;EAAAC,UAAA,EAFV;AAAM;SAEPhB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}