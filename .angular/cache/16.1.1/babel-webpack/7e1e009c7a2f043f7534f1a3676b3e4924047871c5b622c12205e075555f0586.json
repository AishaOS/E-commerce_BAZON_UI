{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/material/snack-bar\";\nimport * as i3 from \"../../auth-services/auth-service/auth.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/material/button\";\nimport * as i7 from \"@angular/material/card\";\nimport * as i8 from \"@angular/material/form-field\";\nimport * as i9 from \"@angular/material/input\";\nimport * as i10 from \"@angular/material/icon\";\nfunction SignupComponent_mat_error_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Please enter a valid name. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SignupComponent_mat_error_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Please enter a valid email address. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SignupComponent_mat_error_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Please enter a valid password. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SignupComponent_mat_error_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Password do not match. \");\n    i0.ɵɵelementEnd();\n  }\n}\nclass SignupComponent {\n  constructor(fb, snackBar, authService, router) {\n    this.fb = fb;\n    this.snackBar = snackBar;\n    this.authService = authService;\n    this.router = router;\n    this.isSpinning = false;\n    this.hidePassword = true;\n  }\n  ngOnInit() {\n    this.signupForm = this.fb.group({\n      name: [null, [Validators.required]],\n      email: [null, [Validators.email, Validators.required]],\n      password: [null, [Validators.required]],\n      confirmPassword: [null, [Validators.required]]\n    });\n  }\n  togglePasswordVisibility() {\n    this.hidePassword = !this.hidePassword;\n  }\n  onSubmit() {\n    if (this.signupForm.valid) {\n      const password = this.signupForm.get('password')?.value;\n      const confirmPassword = this.signupForm.get('confirmPassword')?.value;\n      if (password !== confirmPassword) {\n        this.snackBar.open('Passwords do not match.', 'Close', {\n          duration: 5000,\n          panelClass: 'error-snackbar'\n        });\n        return;\n      }\n      this.isSpinning = true;\n      // Perform the signup logic here\n      // Example: Assuming you have an AuthService with a signup method\n      this.authService.register(this.signupForm.value).subscribe(response => {\n        this.isSpinning = false;\n        console.log(response);\n        this.snackBar.open('Sign up successful!', 'Close', {\n          duration: 5000\n        });\n        // Navigate to the login page or perform any other action\n        this.router.navigateByUrl(\"/login\");\n      }, error => {\n        this.isSpinning = false;\n        this.snackBar.open('Sign up failed. Please try again.', 'Close', {\n          duration: 5000,\n          panelClass: 'error-snackbar'\n        });\n      });\n    } else {\n      for (const i in this.signupForm.controls) {\n        this.signupForm.controls[i].markAsDirty();\n        this.signupForm.controls[i].updateValueAndValidity();\n      }\n    }\n  }\n}\nSignupComponent.ɵfac = function SignupComponent_Factory(t) {\n  return new (t || SignupComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.MatSnackBar), i0.ɵɵdirectiveInject(i3.AuthService), i0.ɵɵdirectiveInject(i4.Router));\n};\nSignupComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SignupComponent,\n  selectors: [[\"app-signup\"]],\n  decls: 37,\n  vars: 10,\n  consts: [[1, \"container\"], [3, \"formGroup\"], [\"appearance\", \"outline\"], [\"matInput\", \"\", \"formControlName\", \"name\", \"placeholder\", \"Name\", \"required\", \"\"], [4, \"ngIf\"], [\"matInput\", \"\", \"formControlName\", \"email\", \"placeholder\", \"E-mail\", \"required\", \"\"], [\"matInput\", \"\", \"formControlName\", \"password\", \"placeholder\", \"Password\", \"required\", \"\", 3, \"type\"], [\"mat-icon-button\", \"\", \"matSuffix\", \"\", 3, \"click\"], [\"matInput\", \"\", \"formControlName\", \"confirmPassword\", \"placeholder\", \"Password\", \"required\", \"\", 3, \"type\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 3, \"disabled\", \"click\"], [\"mat-button\", \"\", \"color\", \"primary\", \"routerLink\", \"/login\"]],\n  template: function SignupComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"mat-card\")(2, \"mat-card-title\");\n      i0.ɵɵtext(3, \"Sign Up\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"mat-card-content\")(5, \"form\", 1)(6, \"mat-form-field\", 2)(7, \"mat-label\");\n      i0.ɵɵtext(8, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"input\", 3);\n      i0.ɵɵtemplate(10, SignupComponent_mat_error_10_Template, 2, 0, \"mat-error\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"mat-form-field\", 2)(12, \"mat-label\");\n      i0.ɵɵtext(13, \"E-mail\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"input\", 5);\n      i0.ɵɵtemplate(15, SignupComponent_mat_error_15_Template, 2, 0, \"mat-error\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"mat-form-field\", 2)(17, \"mat-label\");\n      i0.ɵɵtext(18, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(19, \"input\", 6);\n      i0.ɵɵelementStart(20, \"button\", 7);\n      i0.ɵɵlistener(\"click\", function SignupComponent_Template_button_click_20_listener() {\n        return ctx.togglePasswordVisibility();\n      });\n      i0.ɵɵelementStart(21, \"mat-icon\");\n      i0.ɵɵtext(22);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(23, SignupComponent_mat_error_23_Template, 2, 0, \"mat-error\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"mat-form-field\", 2)(25, \"mat-label\");\n      i0.ɵɵtext(26, \"Confirm Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(27, \"input\", 8);\n      i0.ɵɵelementStart(28, \"button\", 7);\n      i0.ɵɵlistener(\"click\", function SignupComponent_Template_button_click_28_listener() {\n        return ctx.togglePasswordVisibility();\n      });\n      i0.ɵɵelementStart(29, \"mat-icon\");\n      i0.ɵɵtext(30);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(31, SignupComponent_mat_error_31_Template, 2, 0, \"mat-error\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(32, \"button\", 9);\n      i0.ɵɵlistener(\"click\", function SignupComponent_Template_button_click_32_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵtext(33, \"Sign Up\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(34, \"mat-card-actions\")(35, \"button\", 10);\n      i0.ɵɵtext(36, \"Already have an account? Login\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"formGroup\", ctx.signupForm);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.signupForm.get(\"name\").invalid && ctx.signupForm.get(\"name\").touched);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.signupForm.get(\"email\").invalid && ctx.signupForm.get(\"email\").touched);\n      i0.ɵɵadvance(4);\n      i0.ɵɵpropertyInterpolate(\"type\", ctx.hidePassword ? \"password\" : \"text\");\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(ctx.hidePassword ? \"visibility_off\" : \"visibility\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.signupForm.get(\"password\").invalid && ctx.signupForm.get(\"password\").touched);\n      i0.ɵɵadvance(4);\n      i0.ɵɵpropertyInterpolate(\"type\", ctx.hidePassword ? \"password\" : \"text\");\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(ctx.hidePassword ? \"visibility_off\" : \"visibility\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.signupForm.get(\"confirmPassword\").invalid && ctx.signupForm.get(\"confirmPassword\").touched);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", ctx.signupForm.invalid);\n    }\n  },\n  dependencies: [i5.NgIf, i4.RouterLink, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName, i6.MatButton, i6.MatIconButton, i7.MatCard, i7.MatCardActions, i7.MatCardContent, i7.MatCardTitle, i8.MatFormField, i8.MatLabel, i8.MatError, i8.MatSuffix, i9.MatInput, i10.MatIcon],\n  styles: [\".container[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  height: 100vh;\\n}\\n\\nmat-card[_ngcontent-%COMP%] {\\n  max-width: 400px;\\n  width: 100%;\\n  padding: 20px;\\n}\\n@media screen and (max-width: 500px) {\\n  mat-card[_ngcontent-%COMP%] {\\n    max-width: 90%;\\n  }\\n}\\n\\nmat-card-title[_ngcontent-%COMP%] {\\n  text-align: center;\\n  font-size: 24px;\\n  margin-bottom: 20px;\\n}\\n\\nform[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n}\\n\\nmat-form-field[_ngcontent-%COMP%] {\\n  width: 100%;\\n  margin-bottom: 20px;\\n}\\n\\nbutton[_ngcontent-%COMP%] {\\n  width: 100%;\\n}\\n\\n@media screen and (max-width: 500px) {\\n  mat-card-title[_ngcontent-%COMP%] {\\n    font-size: 20px;\\n  }\\n  mat-form-field[_ngcontent-%COMP%] {\\n    margin-bottom: 10px;\\n  }\\n}\\n.error-snackbar[_ngcontent-%COMP%] {\\n  background-color: #f44336 !important;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXV0aC9hdXRoLWNvbXBvbmVudHMvc2lnbnVwL3NpZ251cC5jb21wb25lbnQuc2NzcyIsIndlYnBhY2s6Ly8uLy4uLy4uL0UtY29tbWVyY2UlMjBmaW5hbCUyMHByb2plY3QvRS1jb21tZXJjZV9CQVpPTl9VSS9zcmMvYXBwL2F1dGgvYXV0aC1jb21wb25lbnRzL3NpZ251cC9zaWdudXAuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxhQUFBO0VBQ0EsdUJBQUE7RUFDQSxtQkFBQTtFQUNBLGFBQUE7QUNDSjs7QURFQTtFQUNJLGdCQUFBO0VBQ0EsV0FBQTtFQUNBLGFBQUE7QUNDSjtBRENJO0VBTEo7SUFNUSxjQUFBO0VDRU47QUFDRjs7QURDQTtFQUNJLGtCQUFBO0VBQ0EsZUFBQTtFQUNBLG1CQUFBO0FDRUo7O0FEQ0E7RUFDSSxhQUFBO0VBQ0Esc0JBQUE7RUFDQSxtQkFBQTtBQ0VKOztBRENBO0VBQ0ksV0FBQTtFQUNBLG1CQUFBO0FDRUo7O0FEQ0E7RUFDSSxXQUFBO0FDRUo7O0FEQ0E7RUFDSTtJQUNJLGVBQUE7RUNFTjtFRENFO0lBQ0ksbUJBQUE7RUNDTjtBQUNGO0FERUE7RUFDSSxvQ0FBQTtBQ0FKIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lciB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGhlaWdodDogMTAwdmg7XG59XG5cbm1hdC1jYXJkIHtcbiAgICBtYXgtd2lkdGg6IDQwMHB4O1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHBhZGRpbmc6IDIwcHg7XG5cbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1MDBweCkge1xuICAgICAgICBtYXgtd2lkdGg6IDkwJTtcbiAgICB9XG59XG5cbm1hdC1jYXJkLXRpdGxlIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgZm9udC1zaXplOiAyNHB4O1xuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XG59XG5cbmZvcm0ge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG5tYXQtZm9ybS1maWVsZCB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDtcbn1cblxuYnV0dG9uIHtcbiAgICB3aWR0aDogMTAwJTtcbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTAwcHgpIHtcbiAgICBtYXQtY2FyZC10aXRsZSB7XG4gICAgICAgIGZvbnQtc2l6ZTogMjBweDtcbiAgICB9XG5cbiAgICBtYXQtZm9ybS1maWVsZCB7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XG4gICAgfVxufVxuXG4uZXJyb3Itc25hY2tiYXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmNDQzMzYgIWltcG9ydGFudDtcbn0iLCIuY29udGFpbmVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGhlaWdodDogMTAwdmg7XG59XG5cbm1hdC1jYXJkIHtcbiAgbWF4LXdpZHRoOiA0MDBweDtcbiAgd2lkdGg6IDEwMCU7XG4gIHBhZGRpbmc6IDIwcHg7XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1MDBweCkge1xuICBtYXQtY2FyZCB7XG4gICAgbWF4LXdpZHRoOiA5MCU7XG4gIH1cbn1cblxubWF0LWNhcmQtdGl0bGUge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGZvbnQtc2l6ZTogMjRweDtcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcbn1cblxuZm9ybSB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbm1hdC1mb3JtLWZpZWxkIHtcbiAgd2lkdGg6IDEwMCU7XG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XG59XG5cbmJ1dHRvbiB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1MDBweCkge1xuICBtYXQtY2FyZC10aXRsZSB7XG4gICAgZm9udC1zaXplOiAyMHB4O1xuICB9XG4gIG1hdC1mb3JtLWZpZWxkIHtcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICB9XG59XG4uZXJyb3Itc25hY2tiYXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjQ0MzM2ICFpbXBvcnRhbnQ7XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { SignupComponent };","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","SignupComponent","constructor","fb","snackBar","authService","router","isSpinning","hidePassword","ngOnInit","signupForm","group","name","required","email","password","confirmPassword","togglePasswordVisibility","onSubmit","valid","get","value","open","duration","panelClass","register","subscribe","response","console","log","navigateByUrl","error","i","controls","markAsDirty","updateValueAndValidity","ɵɵdirectiveInject","i1","FormBuilder","i2","MatSnackBar","i3","AuthService","i4","Router","selectors","decls","vars","consts","template","SignupComponent_Template","rf","ctx","ɵɵelement","ɵɵtemplate","SignupComponent_mat_error_10_Template","SignupComponent_mat_error_15_Template","ɵɵlistener","SignupComponent_Template_button_click_20_listener","SignupComponent_mat_error_23_Template","SignupComponent_Template_button_click_28_listener","SignupComponent_mat_error_31_Template","SignupComponent_Template_button_click_32_listener","ɵɵadvance","ɵɵproperty","invalid","touched","ɵɵpropertyInterpolate","ɵɵtextInterpolate"],"sources":["/Users/aishaoyinkansola/Desktop/Projects/E-commerce final project/E-commerce_BAZON_UI/src/app/auth/auth-components/signup/signup.component.ts","/Users/aishaoyinkansola/Desktop/Projects/E-commerce final project/E-commerce_BAZON_UI/src/app/auth/auth-components/signup/signup.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../auth-services/auth-service/auth.service';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent {\n\n  signupForm!: FormGroup;\n  isSpinning = false;\n  hidePassword = true;\n\n  constructor(\n    private fb: FormBuilder,\n    private snackBar: MatSnackBar,\n    private authService: AuthService,\n    private router: Router) { }\n\n  ngOnInit(): void {\n    this.signupForm = this.fb.group({\n      name: [null, [Validators.required]],\n      email: [null, [Validators.email, Validators.required]],\n      password: [null, [Validators.required]],\n      confirmPassword: [null, [Validators.required]],\n    });\n  }\n\n  togglePasswordVisibility() {\n    this.hidePassword = !this.hidePassword;\n  }\n\n  onSubmit(): void {\n\n    if (this.signupForm.valid) {\n      const password = this.signupForm.get('password')?.value;\n      const confirmPassword = this.signupForm.get('confirmPassword')?.value;\n\n      if (password !== confirmPassword) {\n        this.snackBar.open('Passwords do not match.', 'Close', { duration: 5000, panelClass: 'error-snackbar' });\n        return;\n      }\n\n      this.isSpinning = true;\n\n      // Perform the signup logic here\n      // Example: Assuming you have an AuthService with a signup method\n      this.authService.register(this.signupForm.value).subscribe(\n        (response) => {\n          this.isSpinning = false;\n          console.log(response);\n          this.snackBar.open('Sign up successful!', 'Close', { duration: 5000 });\n          // Navigate to the login page or perform any other action\n          this.router.navigateByUrl(\"/login\");\n        },\n        (error) => {\n          this.isSpinning = false;\n          this.snackBar.open('Sign up failed. Please try again.', 'Close', { duration: 5000, panelClass: 'error-snackbar' });\n        }\n      );\n    } else {\n      for (const i in this.signupForm.controls) {\n        this.signupForm.controls[i].markAsDirty();\n        this.signupForm.controls[i].updateValueAndValidity();\n      }\n    }\n  }\n}","<div class=\"container\">\n    <mat-card>\n        <mat-card-title>Sign Up</mat-card-title>\n        <mat-card-content>\n            <form [formGroup]=\"signupForm\">\n\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>Name</mat-label>\n                    <input matInput formControlName=\"name\" placeholder=\"Name\" required>\n                    <mat-error *ngIf=\"signupForm.get('name').invalid && signupForm.get('name').touched\">\n                        Please enter a valid name.\n                    </mat-error>\n                </mat-form-field>\n\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>E-mail</mat-label>\n                    <input matInput formControlName=\"email\" placeholder=\"E-mail\" required>\n                    <mat-error *ngIf=\"signupForm.get('email').invalid && signupForm.get('email').touched\">\n                        Please enter a valid email address.\n                    </mat-error>\n                </mat-form-field>\n\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>Password</mat-label>\n                    <input matInput type=\"{{ hidePassword ? 'password' : 'text' }}\" formControlName=\"password\"\n                        placeholder=\"Password\" required>\n                    <button mat-icon-button matSuffix (click)=\"togglePasswordVisibility()\">\n                        <mat-icon>{{ hidePassword ? 'visibility_off' : 'visibility' }}</mat-icon>\n                    </button>\n                    <mat-error *ngIf=\"signupForm.get('password').invalid && signupForm.get('password').touched\">\n                        Please enter a valid password.\n                    </mat-error>\n                </mat-form-field>\n\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>Confirm Password</mat-label>\n                    <input matInput type=\"{{ hidePassword ? 'password' : 'text' }}\" formControlName=\"confirmPassword\"\n                        placeholder=\"Password\" required>\n                    <button mat-icon-button matSuffix (click)=\"togglePasswordVisibility()\">\n                        <mat-icon>{{ hidePassword ? 'visibility_off' : 'visibility' }}</mat-icon>\n                    </button>\n                    <mat-error\n                        *ngIf=\"signupForm.get('confirmPassword').invalid && signupForm.get('confirmPassword').touched\">\n                        Password do not match.\n                    </mat-error>\n                </mat-form-field>\n\n                <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"signupForm.invalid\"\n                    (click)=\"onSubmit()\">Sign Up</button>\n            </form>\n        </mat-card-content>\n        <mat-card-actions>\n            <button mat-button color=\"primary\" routerLink=\"/login\">Already have an account? Login</button>\n        </mat-card-actions>\n    </mat-card>\n</div>"],"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;;;;;;;;;;ICQ/CC,EAAA,CAAAC,cAAA,gBAAoF;IAChFD,EAAA,CAAAE,MAAA,mCACJ;IAAAF,EAAA,CAAAG,YAAA,EAAY;;;;;IAMZH,EAAA,CAAAC,cAAA,gBAAsF;IAClFD,EAAA,CAAAE,MAAA,4CACJ;IAAAF,EAAA,CAAAG,YAAA,EAAY;;;;;IAUZH,EAAA,CAAAC,cAAA,gBAA4F;IACxFD,EAAA,CAAAE,MAAA,uCACJ;IAAAF,EAAA,CAAAG,YAAA,EAAY;;;;;IAUZH,EAAA,CAAAC,cAAA,gBACmG;IAC/FD,EAAA,CAAAE,MAAA,+BACJ;IAAAF,EAAA,CAAAG,YAAA,EAAY;;;ADtChC,MAKaC,eAAe;EAM1BC,YACUC,EAAe,EACfC,QAAqB,EACrBC,WAAwB,EACxBC,MAAc;IAHd,KAAAH,EAAE,GAAFA,EAAE;IACF,KAAAC,QAAQ,GAARA,QAAQ;IACR,KAAAC,WAAW,GAAXA,WAAW;IACX,KAAAC,MAAM,GAANA,MAAM;IAPhB,KAAAC,UAAU,GAAG,KAAK;IAClB,KAAAC,YAAY,GAAG,IAAI;EAMS;EAE5BC,QAAQA,CAAA;IACN,IAAI,CAACC,UAAU,GAAG,IAAI,CAACP,EAAE,CAACQ,KAAK,CAAC;MAC9BC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAChB,UAAU,CAACiB,QAAQ,CAAC,CAAC;MACnCC,KAAK,EAAE,CAAC,IAAI,EAAE,CAAClB,UAAU,CAACkB,KAAK,EAAElB,UAAU,CAACiB,QAAQ,CAAC,CAAC;MACtDE,QAAQ,EAAE,CAAC,IAAI,EAAE,CAACnB,UAAU,CAACiB,QAAQ,CAAC,CAAC;MACvCG,eAAe,EAAE,CAAC,IAAI,EAAE,CAACpB,UAAU,CAACiB,QAAQ,CAAC;KAC9C,CAAC;EACJ;EAEAI,wBAAwBA,CAAA;IACtB,IAAI,CAACT,YAAY,GAAG,CAAC,IAAI,CAACA,YAAY;EACxC;EAEAU,QAAQA,CAAA;IAEN,IAAI,IAAI,CAACR,UAAU,CAACS,KAAK,EAAE;MACzB,MAAMJ,QAAQ,GAAG,IAAI,CAACL,UAAU,CAACU,GAAG,CAAC,UAAU,CAAC,EAAEC,KAAK;MACvD,MAAML,eAAe,GAAG,IAAI,CAACN,UAAU,CAACU,GAAG,CAAC,iBAAiB,CAAC,EAAEC,KAAK;MAErE,IAAIN,QAAQ,KAAKC,eAAe,EAAE;QAChC,IAAI,CAACZ,QAAQ,CAACkB,IAAI,CAAC,yBAAyB,EAAE,OAAO,EAAE;UAAEC,QAAQ,EAAE,IAAI;UAAEC,UAAU,EAAE;QAAgB,CAAE,CAAC;QACxG;;MAGF,IAAI,CAACjB,UAAU,GAAG,IAAI;MAEtB;MACA;MACA,IAAI,CAACF,WAAW,CAACoB,QAAQ,CAAC,IAAI,CAACf,UAAU,CAACW,KAAK,CAAC,CAACK,SAAS,CACvDC,QAAQ,IAAI;QACX,IAAI,CAACpB,UAAU,GAAG,KAAK;QACvBqB,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;QACrB,IAAI,CAACvB,QAAQ,CAACkB,IAAI,CAAC,qBAAqB,EAAE,OAAO,EAAE;UAAEC,QAAQ,EAAE;QAAI,CAAE,CAAC;QACtE;QACA,IAAI,CAACjB,MAAM,CAACwB,aAAa,CAAC,QAAQ,CAAC;MACrC,CAAC,EACAC,KAAK,IAAI;QACR,IAAI,CAACxB,UAAU,GAAG,KAAK;QACvB,IAAI,CAACH,QAAQ,CAACkB,IAAI,CAAC,mCAAmC,EAAE,OAAO,EAAE;UAAEC,QAAQ,EAAE,IAAI;UAAEC,UAAU,EAAE;QAAgB,CAAE,CAAC;MACpH,CAAC,CACF;KACF,MAAM;MACL,KAAK,MAAMQ,CAAC,IAAI,IAAI,CAACtB,UAAU,CAACuB,QAAQ,EAAE;QACxC,IAAI,CAACvB,UAAU,CAACuB,QAAQ,CAACD,CAAC,CAAC,CAACE,WAAW,EAAE;QACzC,IAAI,CAACxB,UAAU,CAACuB,QAAQ,CAACD,CAAC,CAAC,CAACG,sBAAsB,EAAE;;;EAG1D;;AA3DWlC,eAAe,C;mBAAfA,eAAe,EAAAJ,EAAA,CAAAuC,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAzC,EAAA,CAAAuC,iBAAA,CAAAG,EAAA,CAAAC,WAAA,GAAA3C,EAAA,CAAAuC,iBAAA,CAAAK,EAAA,CAAAC,WAAA,GAAA7C,EAAA,CAAAuC,iBAAA,CAAAO,EAAA,CAAAC,MAAA;AAAA;AAAf3C,eAAe,C;QAAfA,eAAe;EAAA4C,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,yBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCX5BtD,EAAA,CAAAC,cAAA,aAAuB;MAECD,EAAA,CAAAE,MAAA,cAAO;MAAAF,EAAA,CAAAG,YAAA,EAAiB;MACxCH,EAAA,CAAAC,cAAA,uBAAkB;MAIKD,EAAA,CAAAE,MAAA,WAAI;MAAAF,EAAA,CAAAG,YAAA,EAAY;MAC3BH,EAAA,CAAAwD,SAAA,eAAmE;MACnExD,EAAA,CAAAyD,UAAA,KAAAC,qCAAA,uBAEY;MAChB1D,EAAA,CAAAG,YAAA,EAAiB;MAEjBH,EAAA,CAAAC,cAAA,yBAAqC;MACtBD,EAAA,CAAAE,MAAA,cAAM;MAAAF,EAAA,CAAAG,YAAA,EAAY;MAC7BH,EAAA,CAAAwD,SAAA,gBAAsE;MACtExD,EAAA,CAAAyD,UAAA,KAAAE,qCAAA,uBAEY;MAChB3D,EAAA,CAAAG,YAAA,EAAiB;MAEjBH,EAAA,CAAAC,cAAA,yBAAqC;MACtBD,EAAA,CAAAE,MAAA,gBAAQ;MAAAF,EAAA,CAAAG,YAAA,EAAY;MAC/BH,EAAA,CAAAwD,SAAA,gBACoC;MACpCxD,EAAA,CAAAC,cAAA,iBAAuE;MAArCD,EAAA,CAAA4D,UAAA,mBAAAC,kDAAA;QAAA,OAASN,GAAA,CAAAnC,wBAAA,EAA0B;MAAA,EAAC;MAClEpB,EAAA,CAAAC,cAAA,gBAAU;MAAAD,EAAA,CAAAE,MAAA,IAAoD;MAAAF,EAAA,CAAAG,YAAA,EAAW;MAE7EH,EAAA,CAAAyD,UAAA,KAAAK,qCAAA,uBAEY;MAChB9D,EAAA,CAAAG,YAAA,EAAiB;MAEjBH,EAAA,CAAAC,cAAA,yBAAqC;MACtBD,EAAA,CAAAE,MAAA,wBAAgB;MAAAF,EAAA,CAAAG,YAAA,EAAY;MACvCH,EAAA,CAAAwD,SAAA,gBACoC;MACpCxD,EAAA,CAAAC,cAAA,iBAAuE;MAArCD,EAAA,CAAA4D,UAAA,mBAAAG,kDAAA;QAAA,OAASR,GAAA,CAAAnC,wBAAA,EAA0B;MAAA,EAAC;MAClEpB,EAAA,CAAAC,cAAA,gBAAU;MAAAD,EAAA,CAAAE,MAAA,IAAoD;MAAAF,EAAA,CAAAG,YAAA,EAAW;MAE7EH,EAAA,CAAAyD,UAAA,KAAAO,qCAAA,uBAGY;MAChBhE,EAAA,CAAAG,YAAA,EAAiB;MAEjBH,EAAA,CAAAC,cAAA,iBACyB;MAArBD,EAAA,CAAA4D,UAAA,mBAAAK,kDAAA;QAAA,OAASV,GAAA,CAAAlC,QAAA,EAAU;MAAA,EAAC;MAACrB,EAAA,CAAAE,MAAA,eAAO;MAAAF,EAAA,CAAAG,YAAA,EAAS;MAGjDH,EAAA,CAAAC,cAAA,wBAAkB;MACyCD,EAAA,CAAAE,MAAA,sCAA8B;MAAAF,EAAA,CAAAG,YAAA,EAAS;;;MAhDxFH,EAAA,CAAAkE,SAAA,GAAwB;MAAxBlE,EAAA,CAAAmE,UAAA,cAAAZ,GAAA,CAAA1C,UAAA,CAAwB;MAKVb,EAAA,CAAAkE,SAAA,GAAsE;MAAtElE,EAAA,CAAAmE,UAAA,SAAAZ,GAAA,CAAA1C,UAAA,CAAAU,GAAA,SAAA6C,OAAA,IAAAb,GAAA,CAAA1C,UAAA,CAAAU,GAAA,SAAA8C,OAAA,CAAsE;MAQtErE,EAAA,CAAAkE,SAAA,GAAwE;MAAxElE,EAAA,CAAAmE,UAAA,SAAAZ,GAAA,CAAA1C,UAAA,CAAAU,GAAA,UAAA6C,OAAA,IAAAb,GAAA,CAAA1C,UAAA,CAAAU,GAAA,UAAA8C,OAAA,CAAwE;MAOpErE,EAAA,CAAAkE,SAAA,GAA+C;MAA/ClE,EAAA,CAAAsE,qBAAA,SAAAf,GAAA,CAAA5C,YAAA,uBAA+C;MAGjDX,EAAA,CAAAkE,SAAA,GAAoD;MAApDlE,EAAA,CAAAuE,iBAAA,CAAAhB,GAAA,CAAA5C,YAAA,mCAAoD;MAEtDX,EAAA,CAAAkE,SAAA,GAA8E;MAA9ElE,EAAA,CAAAmE,UAAA,SAAAZ,GAAA,CAAA1C,UAAA,CAAAU,GAAA,aAAA6C,OAAA,IAAAb,GAAA,CAAA1C,UAAA,CAAAU,GAAA,aAAA8C,OAAA,CAA8E;MAO1ErE,EAAA,CAAAkE,SAAA,GAA+C;MAA/ClE,EAAA,CAAAsE,qBAAA,SAAAf,GAAA,CAAA5C,YAAA,uBAA+C;MAGjDX,EAAA,CAAAkE,SAAA,GAAoD;MAApDlE,EAAA,CAAAuE,iBAAA,CAAAhB,GAAA,CAAA5C,YAAA,mCAAoD;MAG7DX,EAAA,CAAAkE,SAAA,GAA4F;MAA5FlE,EAAA,CAAAmE,UAAA,SAAAZ,GAAA,CAAA1C,UAAA,CAAAU,GAAA,oBAAA6C,OAAA,IAAAb,GAAA,CAAA1C,UAAA,CAAAU,GAAA,oBAAA8C,OAAA,CAA4F;MAK7CrE,EAAA,CAAAkE,SAAA,GAA+B;MAA/BlE,EAAA,CAAAmE,UAAA,aAAAZ,GAAA,CAAA1C,UAAA,CAAAuD,OAAA,CAA+B;;;;;;SDpC1FhE,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}